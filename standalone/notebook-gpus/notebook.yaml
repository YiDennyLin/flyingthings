apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: training-data
  namespace: flyingthings-standalone
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 'flyingthings-notebook'
  namespace: flyingthings-standalone
  annotations: {}
spec:
  selector:
    matchLabels:
      app: flyingthings
  replicas: 1
  template:
    metadata:
      labels:
        app: flyingthings
    spec:
      nodeSelector:
        nvidia.com/gpu.deploy.driver: 'true'
      containers:
        - name: container
          image: >-
            image-registry.openshift-image-registry.svc:5000/flyingthings-standalone/yolo-notebook:latest
          resources:
            limits:
              nvidia.com/gpu: 1
          envFrom:
            - configMapRef:
                name: flyingthings-configmap
          ports:
            - containerPort: 8888
              protocol: TCP
          volumeMounts:
            - mountPath: /mydata
              name: training-data
            - mountPath: /dev/shm
              name: dshm
      devices:
        - name: my-gpu
          devicePath: /dev/nvidia0
      volumes:
        - name: training-data
          persistentVolumeClaim:
            claimName: training-data
        - name: dshm
          emptyDir:
             medium: Memory
      imagePullSecrets: []
  strategy:
    type: Recreate
  paused: false
---
apiVersion: v1
kind: Service
metadata:
  name: flyingthings-svc
  namespace: flyingthings-standalone
spec:
  selector:
    app: flyingthings
  ports:
    - protocol: TCP
      port: 8888
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: flyingthings-rt
  namespace: flyingthings-standalone
  labels: {}
spec:
  to:
    kind: Service
    name: flyingthings-svc
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Allow
  path: /
  port:
    targetPort: 8888
