apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: flyingthings-image-pipeline
  namespace: flyingthings-standalone
spec:
  params:
    # - description: name of the deployment to be patched
    #   name: deployment-name
    #   type: string
    - default: https://github.com/redhat-na-ssa/flyingthings.git
      description: url of the git repo for the code of deployment
      name: git-url
      type: string
    - default: develop
      description: revision to be used from repo of the code for deployment
      name: git-revision
      type: string
    - default: image-registry.openshift-image-registry.svc:5000/flyingthings-standalone/yolox
      description: image to be build from the code
      name: IMAGE
      type: string
    # - description: build args for docker file
    #   name: BUILD_EXTRA_ARGS
    #   type: string
    - default: source/yolo
      description: dockerfile path
      name: DOCKERFILE_PATH
      type: string
  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: $(params.git-url)
        - name: subdirectory
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: revision
          value: $(params.git-revision)
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: see-stuff
      taskSpec:
        steps:
          - name: run-batch-file
            image: ubi9:latest
            script: |
              #!/usr/bin/env bash
              echo "Let's see what we got here..." \
              && ls -al /workspace
      runAfter:
        - fetch-repository
      workspaces:
        - name: workspace
          workspace: shared-workspace
    - name: build-image
      params:
        # - name: BUILD_EXTRA_ARGS
        #   value: $(params.BUILD_EXTRA_ARGS)
        - name: IMAGE
          value: $(params.IMAGE)
        - name: DOCKERFILE_PATH
          value: $(params.DOCKERFILE_PATH)          
        - name: DOCKERFILE
          value: $(workspaces.path)/$(params.DOCKERFILE_PATH)/Dockerfile
      runAfter:
        - see-stuff
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: shared-workspace
    # - name: build-and-print
    #   params:
    #     - name: IMAGE
    #       value: $(params.IMAGE)
    #     - name: DOCKERFILE_PATH
    #       value: $(params.DOCKERFILE_PATH)          
    #     - name: DOCKERFILE
    #       value: $(workspaces.path)/$(params.DOCKERFILE_PATH)/Dockerfile
    #   runAfter:
    #     - see-stuff
    #   taskSpec:
    #     steps:
    #       - name: build-container
    #         image: registry.redhat.io/ubi8/buildah
    #         script: |
    #           #!/usr/bin/env bash
    #           # Build your container using buildah
    #           # Print a message
    #           ls -l /workspace/source
    #           buildah bud -t myimage $(DOCKERFILE)
    #   workspaces:
    #     - name: source
    #       workspace: shared-workspace
  workspaces:
    - name: shared-workspace
